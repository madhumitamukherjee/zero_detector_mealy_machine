///////////////////////////////RTL design///////////////////////
module mealy_zero_dectector(
  input x_in,clock,reset,
  output reg y_out
);
  reg [1:0] state, next_state;
  parameter S0=2'b00, S1=2'b01, S2=2'b10, S3=2'b11;
  always@(posedge clock)
    begin
    if(reset==0) state<=S0;
  else 
    state<=next_state;
    end
  
  always@(state,x_in)
    begin
    case(state)
      S0: if(x_in) next_state=S1; else next_state=S0;
      S1: if(x_in) next_state=S3; else next_state=S0;
      S2: if(x_in) next_state=S0; else next_state=S2;
      S3: if(x_in) next_state=S2; else next_state=S0;
    endcase
    end
  always@(state,x_in)
    begin
    case(state)
      S0: y_out=0;
      S1,S2,S3: y_out= ~x_in;
    endcase
    end
endmodule

//////////////////////Interface////////////////////////////

interface mealy_if();
  logic x_in;
  logic clock;
  logic reset;
  logic y_out;
  
endinterface
